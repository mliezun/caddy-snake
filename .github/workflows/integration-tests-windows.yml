---
    name: Integration Tests Windows
    on:
      pull_request:
        branches:
          - main
      push:
        branches:
          - main
    jobs:
      tests:
        runs-on: windows-latest
        strategy:
          fail-fast: false
          matrix:
            tool-name: ['simple', 'simple_async']
            python-version: ['3.13']
        env:
          GOEXPERIMENT: cgocheck2
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-go@v5
            with:
              go-version: '1.24'
              cache: false
          - name: Install Xcaddy
            run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
          - name: Set up Python
            uses: actions/setup-python@v5
            with:
              python-version: ${{ matrix.python-version }}
          - name: Install Python dependencies
            working-directory: tests/${{ matrix.tool-name }}/
            run: |
              python -m venv venv
              .\venv\Scripts\activate
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            shell: pwsh
          - name: Build the server
            working-directory: tests/${{ matrix.tool-name }}/
            run: |
              $env:CGO_ENABLED = "1"
              xcaddy build --with github.com/mliezun/caddy-snake=../..
            shell: pwsh
          - name: Run integration tests
            working-directory: tests/${{ matrix.tool-name }}/
            run: |
              Start-Process -FilePath ".\caddy.exe" -ArgumentList "run", "--config", "Caddyfile" -RedirectStandardOutput "caddy.log" -RedirectStandardError "caddy.log"
              $timeout = 60
              while ($timeout -gt 0 -and -not (Select-String "finished cleaning storage units" -Path "caddy.log")) {
                Start-Sleep -Seconds 1
                $timeout -= 1
              }
              .\venv\Scripts\activate
              python main_test.py
            shell: pwsh
          - name: Upload logs and report
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: caddy-logs-${{ matrix.tool-name }}-${{ matrix.python-version }}
              path: |
                tests/${{ matrix.tool-name }}/caddy.log
    