---
    name: Integration Tests Windows
    on:
      pull_request:
        branches:
          - main
      push:
        branches:
          - main
    jobs:
      tests:
        runs-on: windows-latest
        strategy:
          fail-fast: false
          matrix:
            tool-name: ['django', 'fastapi']
            python-version: ['3.13']
        env:
          GOEXPERIMENT: cgocheck2
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-go@v5
            with:
              go-version: '1.24'
              cache: false
          - name: Install Xcaddy
            run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
          - name: Set up Python
            uses: actions/setup-python@v5
            with:
              python-version: ${{ matrix.python-version }}
          - name: Install Python dependencies
            working-directory: tests/${{ matrix.tool-name }}/
            run: |
              python -m venv venv
              .\venv\Scripts\activate
              python -m pip install --upgrade pip
              pip install -r requirements.txt
            shell: pwsh
          - name: Install MSYS2 pkg-config
            run: |
              choco install pkgconfiglite -y
              echo "C:\Program Files (x86)\pkgconfiglite\bin" >> $env:GITHUB_PATH
            shell: pwsh
    
          - name: Create python3-embed.pc
            run: |
              $pythonPath = (python -c "import sys; print(sys.base_prefix)").Replace("\", "/")
              $includeDir = "$pythonPath/include"
              $libDir = "$pythonPath/libs"
              $pcContent = @"
              prefix=$pythonPath
              exec_prefix=\${prefix}
              libdir=\${prefix}/libs
              includedir=\${prefix}/include
    
              Name: Python 3 Embed
              Description: Python language library (embedding)
              Version: $(python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
              Cflags: -I\${includedir}
              Libs: -L\${libdir} -lpython$($(python -c "import sys; print(f'{sys.version_info.major}{sys.version_info.minor}')"))
              "@
              New-Item -ItemType Directory -Force -Path C:/a/pkgconfig | Out-Null
              $pcContent | Out-File -Encoding ascii C:/a/pkgconfig/python3-embed.pc
            shell: pwsh
          - name: Build caddy
            working-directory: tests/${{ matrix.tool-name }}/
            run: |
              $env:CGO_ENABLED = "1"
              $env:PKG_CONFIG_PATH = "C:/a/pkgconfig"
              xcaddy build --with github.com/mliezun/caddy-snake=../..
            shell: pwsh
          - name: Run integration tests
            working-directory: tests/${{ matrix.tool-name }}/
            run: |
              touch caddy.log
              Start-Process -FilePath "cmd.exe" -ArgumentList "/c", ".\caddy.exe run --config Caddyfile > caddy.log 2>&1"
              $timeout = 60
              while ($timeout -gt 0 -and -not (Select-String "finished cleaning storage units" -Path "caddy.log")) {
                Start-Sleep -Seconds 1
                $timeout -= 1
              }
              .\venv\Scripts\activate
              python main_test.py
            shell: pwsh
          - name: Upload logs and report
            if: always()
            uses: actions/upload-artifact@v4
            with:
              name: caddy-logs-${{ matrix.tool-name }}-${{ matrix.python-version }}
              path: |
                tests/${{ matrix.tool-name }}/caddy.log
