---
name: Integration Tests Linux
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  tests:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        tool-name: ['django', 'django_channels', 'flask', 'fastapi', 'simple', 'simple_async', 'socketio']
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.13-nogil']
    env:
      GOEXPERIMENT: cgocheck2
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: false
      - name: Install Xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      - name: Set up Python ${{ matrix.python-version }}
        working-directory: tests/${{ matrix.tool-name }}/
        if: matrix.python-version != '3.13-nogil'
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -yyqq
          sudo apt-get install -yyqq software-properties-common valgrind time
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -yyqq python${{ matrix.python-version }}-dev python${{ matrix.python-version }}-venv
          sudo mv /usr/lib/x86_64-linux-gnu/pkgconfig/python-${{ matrix.python-version }}-embed.pc /usr/lib/x86_64-linux-gnu/pkgconfig/python3-embed.pc
          rm -rf venv
          python${{ matrix.python-version }} -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
      - name: Set up Python ${{ matrix.python-version }}
        working-directory: tests/${{ matrix.tool-name }}/
        if: matrix.python-version == '3.13-nogil'
        continue-on-error: true
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update -yyqq
          sudo apt-get install -yyqq software-properties-common valgrind curl gcc build-essential
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          sudo add-apt-repository -y ppa:deadsnakes/ppa
          sudo apt-get install -yyqq python${{ matrix.python-version }} python3.13-dev
          sudo mv /usr/lib/x86_64-linux-gnu/pkgconfig/python-${{ matrix.python-version }}-embed.pc /usr/lib/x86_64-linux-gnu/pkgconfig/python3-embed.pc
          python${{ matrix.python-version }} -m venv --without-pip venv
          source venv/bin/activate
          echo $(which python)
          python get-pip.py
          pip install -r requirements.txt
      - name: Build the server
        working-directory: tests/${{ matrix.tool-name }}/
        run: CGO_ENABLED=1 xcaddy build --with github.com/mliezun/caddy-snake=../..
      - name: Run integration tests
        working-directory: tests/${{ matrix.tool-name }}/
        if: matrix.python-version != '3.13-nogil'
        run: |
          /usr/bin/time -v ./caddy run --config Caddyfile > caddy.log 2>&1 &
          timeout 60 bash -c 'while ! grep -q "finished cleaning storage units" caddy.log; do sleep 1; done'
          source venv/bin/activate
          python main_test.py
      - name: Run integration tests (${{ matrix.python-version }})
        working-directory: tests/${{ matrix.tool-name }}/
        if: matrix.python-version == '3.13-nogil'
        continue-on-error: true
        run: |
          /usr/bin/time -v ./caddy run --config Caddyfile > caddy.log 2>&1 &
          timeout 60 bash -c 'while ! grep -q "finished cleaning storage units" caddy.log; do sleep 1; done'
          source venv/bin/activate
          python main_test.py
      - name: Upload logs and report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: caddy-integration-tests-logs-${{ matrix.tool-name }}-${{ matrix.python-version }}
          path: |
            tests/${{ matrix.tool-name }}/caddy.log
